/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pdfsearcher;

import java.awt.Color;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import static java.lang.Thread.State.TERMINATED;
import static java.lang.Thread.State.TIMED_WAITING;
import static java.lang.Thread.sleep;
import java.nio.channels.FileChannel;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.apache.pdfbox.cos.COSDocument;
import org.apache.pdfbox.pdfparser.PDFParser;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.util.PDFTextStripper;
import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import static pdfsearcher.PDFSearcher.copy;
import static pdfsearcher.PDFSearcher.readXLSFile;

/**
 *
 * @author Sivaraj
 */
public class NewJFrame extends javax.swing.JFrame implements Runnable {
Thread t; 
String s2;
   /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        this.t = new Thread();
        initComponents();
        jTextField1.setEditable(false);
        jTextField2.setEditable(false);
        jTextField3.setEditable(false);
        jProgressBar1.setBackground(Color.blue);
        jTextArea1.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("AMCAT NAME FINDER");

        jButton1.setText("Browse");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Source Folder");

        jButton2.setText("Browse");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Destination Folder");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel3.setText("Log");

        jLabel4.setText("Select Excel file ");

        jButton3.setText("Browse");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Find");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel5.setText("None");

        jLabel6.setText("Status :");

        jProgressBar1.setBorderPainted(false);
        jProgressBar1.setFocusable(false);

        jButton5.setText("Open Destination folder");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jButton5)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                                    .addComponent(jTextField2)
                                    .addComponent(jTextField1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton1)
                                    .addComponent(jButton2)
                                    .addComponent(jButton3)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 31, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(275, 275, 275)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
  
        // TODO add your handling code here:
        try{
        JFileChooser j = new JFileChooser("c:/");
j.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int opt = j.showOpenDialog(this);
        //JOptionPane.showMessageDialog(rootPane, j.getSelectedFile());
        jTextField1.setText(j.getSelectedFile().toString());
        }
        catch(Exception e)
        {
            
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try{
        JFileChooser j = new JFileChooser("c:/");
j.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int opt = j.showOpenDialog(this);
        //JOptionPane.showMessageDialog(rootPane, j.getSelectedFile());
        jTextField2.setText(j.getSelectedFile().toString());
        }
        catch(Exception e)
        {
            
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try{
        JFileChooser j = new JFileChooser("c:/");
//j.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel FILES", "xls", "excel");
        j.setFileFilter(filter);
        int opt = j.showOpenDialog(this);
        //JOptionPane.showMessageDialog(rootPane, j.getSelectedFile());
        jTextField3.setText(j.getSelectedFile().toString());
        }
        catch(Exception e)
        {
            
        }
    }//GEN-LAST:event_jButton3ActionPerformed
Thread t1;
    public void disp(int i) throws InterruptedException
    {
       jProgressBar1.setValue(i);
       // System.out.print("\ndisp running");
jTextArea1.repaint();
       sleep(500);
    }
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
                jTextArea1.setText("");
        jButton4.setEnabled(false);
            // TODO add your handling code here:
            if(jTextField1.getText().equals(""))
                    {
                        jTextArea1.append("Please select Source folder...\n");
                        jButton4.setEnabled(true);
                    }
                    else if(jTextField2.getText().equals("")){
                        jTextArea1.append("Please select Destination folder...\n");
                    jButton4.setEnabled(true);
                    }
                    else if(jTextField1.getText()==jTextField2.getText())
            {
                jTextArea1.append("Source folder and destination Folder Should not be same...\n");
            jButton4.setEnabled(true);
            }
            else if(jTextField3.getText().equals("")){
                        jTextArea1.append("select Excel file...\n");
            jButton4.setEnabled(true);
            }
            else{
                jLabel5.setText("Searching...");
                jTextArea1.repaint();
                 t1 = new Thread(
                        new Runnable() {
                            public void run() {
                                
                                try {
                                    readXLSFile();
                                } catch (IOException ex) {
                                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                                } catch (InterruptedException ex) {
                                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                                }
                                
                            }
                        }
                );
                t1.start();
                Thread thread = new Thread(new Runnable() {
            @Override
            public void run() {
                int i=0;
                while (true) {
                   
                    try {
                       // System.out.print(t1.getState().toString());
                 /*      if(t1.getState()==TIMED_WAITING)
                       {
                           jLabel5.setText("Task Completed");
                           jButton4.setEnabled(true);
                           jProgressBar1.setValue(100);
                           break;
                       }*/
                       if(t1.getState()==TERMINATED){
                           if(jTextArea1.getText().length()==0)
                               jTextArea1.append("No Data Found");
                           jLabel5.setText("Searching finished");
                           jProgressBar1.setValue(0);
                           jButton4.setEnabled(true);
                           break;
                       }
                       i+=5;
                       if(i>100)
                           i=0;
                       disp(i);
                        try {
                            Thread.sleep(1);
                        } catch (InterruptedException ex) {
                            ex.printStackTrace();
                        }
                    } catch (InterruptedException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        });
        thread.start();
                //jTextArea1.append("Search and Replaced Sucessfully...\n");
                //jTextArea1.repaint();
                } 
            
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        
    try {
        Runtime r=Runtime.getRuntime();
        r.exec("rundll32 url.dll,FileProtocolHandler " + jTextField2.getText().toString());
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(rootPane, "file not found");
    }
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
                
            }
        });
    }
public void copy ( String src,  String tar)  
        throws IOException, InterruptedException {  
         int i=1;
         File source=new File(src);
         File target=new File(tar+".pdf");
         while(target.exists())
         {
            //tar=tar.substring(0,tar.length()-1);
             target=new File(tar + i +".pdf");
             i++;
         }
        FileChannel sourceChannel = null;  
        FileChannel targetChannel =null;  
        try {  
            sourceChannel =new FileInputStream(source).getChannel();  
            targetChannel=  new FileOutputStream(target).getChannel();  
        targetChannel.transferFrom(sourceChannel, 0,  
        sourceChannel.size());
       s2=target.toString();
        
        
        //String s1;
       //s1=jTextArea1.getText();
       jTextArea1.append(target.toString() + "\n");
   
      /* sleep(500);
       if(t.isAlive()==true)
       {
           t.destroy();
       }
       t.start();*/
        }  
        finally {  
        targetChannel.close();  
        sourceChannel.close();  
        }  
        }
public  void readXLSFile() throws IOException, InterruptedException
	{
            //System.out.print("start running");
            try{
		InputStream ExcelFileToRead = new FileInputStream(jTextField3.getText());
		HSSFWorkbook wb = new HSSFWorkbook(ExcelFileToRead);

		HSSFSheet sheet=wb.getSheetAt(0);
		HSSFRow row; 
		HSSFCell cell;

		Iterator rows = sheet.rowIterator();

		//while (rows.hasNext())
		//{
			row=(HSSFRow) rows.next();
                        
                        
			Iterator cells = row.cellIterator();
			
			while (cells.hasNext())
			{
				cell=(HSSFCell) cells.next();
                            if(row.getRowNum()==0){
                            switch (cell.getCellType()) {
                                case HSSFCell.CELL_TYPE_STRING:
                                    readfile(cell.getStringCellValue());
                                    sleep(1000);
                                    break;
                                //case HSSFCell.CELL_TYPE_NUMERIC:
                                  //  System.out.print(cell.getNumericCellValue()+" ");
                                    //break;
                            //U Can Handel Boolean, Formula, Errors
                                default:
                                    break;
                            }
			}
			//System.out.println();
		}
                //}
            }catch(Exception e){
                    jTextArea1.append("select xls file");
                    t1.interrupt();
               }
	//System.out.print("\nstop running");
	}
    
    public void readfile(String s) throws IOException{
        //Scanner reader = new Scanner(System.in);
        String path = jTextField1.getText();
        String path1 = jTextField2.getText();
        //QueryParser qparser;
        COSDocument doc;
        PDDocument pd = null;
        //System.out.println("Enter the name : ");
        String in = s;
        PDFTextStripper file = null;
        PDFParser parser;
        File folder = new File(path);
        String files[] = folder.list();
        for(int i = 0; i < files.length; i++)
        {
            folder = new File(path+"/"+files[i]);
            //System.out.println(path+"/"+files[i]);
            try
            {
         parser=new PDFParser(new FileInputStream(folder));
         parser.parse();
         doc=parser.getDocument();
         file=new PDFTextStripper();
         pd=new PDDocument(doc);
         file.setStartPage(6);
         file.setEndPage(6);
        // StringBuilder sb = null;
         //sb=null;
         //sb.append(file.getText(pd));
         String txt=file.getText(pd);
         if(txt.toLowerCase().contains(in.toLowerCase()))
         {            //System.out.println(sb.toString());
      //       jTextArea1.append(path+"\\"+files[i]+"\n");
             //File src=new File(path+"/"+files[i]);
             //File dest=new File(path1+"/"+s);
             copy(path+"\\"+files[i],path1+"\\"+s);
             //sleep(1000);
             //i = files.length;
         }
            }
            catch(Exception e)
            {
                        System.out.print(e+"\n");
            }
            finally{
                pd.close();
            }
        }       
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
